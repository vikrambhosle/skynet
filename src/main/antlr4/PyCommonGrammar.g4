grammar PyCommonGrammar;


Identifier  : [a-zA-Z_] [a-zA-Z_0-9]*  ;
// nicknames
DOT : '.' ;
AT : '@' ;
EQUAL : '=' ;
COMMA : ',' ;
LBracket : '(' | '[' | '{' ;
RBracket : ')' | ']' | '}' ;
fragment A:('a'|'A');
fragment B:('b'|'B');
fragment C:('c'|'C');
fragment D:('d'|'D');
fragment E:('e'|'E');
fragment F:('f'|'F');
fragment G:('g'|'G');
fragment H:('h'|'H');
fragment I:('i'|'I');
fragment J:('j'|'J');
fragment K:('k'|'K');
fragment L:('l'|'L');
fragment M:('m'|'M');
fragment N:('n'|'N');
fragment O:('o'|'O');
fragment P:('p'|'P');
fragment Q:('q'|'Q');
fragment R:('r'|'R');
fragment S:('s'|'S');
fragment T:('t'|'T');
fragment U:('u'|'U');
fragment V:('v'|'V');
fragment W:('w'|'W');
fragment X:('x'|'X');
fragment Y:('y'|'Y');
fragment Z:('z'|'Z');
WS  :   [ \r\t\u000C\n]+ -> channel(HIDDEN) ;
COMMENT    :   '/*' .*? '*/'    -> channel(HIDDEN) ;
LINE_COMMENT    :   '*' ~[\r\n]* -> channel(HIDDEN) ;